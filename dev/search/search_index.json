{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#crispin","title":"CRISPIN \ud83c\udf6a","text":"<p>CRISPr screen sequencing analysis pipelINe</p> <p>formerly known as CRUISE</p> <p>\ud83d\udea7 This project is under active development. It is not yet ready for production use. \ud83d\udea7</p> <p> </p>"},{"location":"#set-up","title":"Set up","text":"<p>CRISPIN is installed on the Biowulf HPC. For installation in other execution environments, refer to the docs.</p>"},{"location":"#biowulf","title":"Biowulf","text":"<p>CRISPIN is available on Biowulf in the <code>ccbrpipeliner</code> module. You'll first need to start an interactive session and create a directory from where you'll run crispin.</p> <pre><code># start an interactive node\nsinteractive --mem=2g --cpus-per-task=2 --gres=lscratch:200\n# make a working directory for your project and go to it\nmkdir -p /data/$USER/crisprseq\ncd /data/$USER/crisprseq\n# load the ccbrpipeliener module\nmodule load ccbrpipeliner\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Initialize and run crispin with test data:</p> <pre><code># copy the crispin config files to your current directory\ncrispin init\n# preview the crispin jobs that will run with the test dataset\ncrispin run --mode local -profile test -preview\n# launch a crispin run on slurm with the test dataset\ncrispin run --mode slurm -profile test,biowulf\n</code></pre> <p>To run CRISPIN on your own data, you'll need to create a sample sheet. Take a look at the example: assets/samplesheet_test_biowulf.csv.</p> <p>You'll also need to select an appropriate library for your dataset. CRISPIN is bundled with several libraries in assets/lib, or you can download your own. Once you've created a samplesheet with paths to your fastq files, run crispin with the <code>--input</code> option to specify the path to your sample sheet and <code>--library</code> for the path to your library file:</p> <pre><code>crispin run --mode slurm -profile biowulf --input samplesheet.csv --library assets/lib/yusa_library.csv\n</code></pre>"},{"location":"#help-contributing","title":"Help &amp; Contributing","text":"<p>Come across a bug? Open an issue and include a minimal reproducible example.</p> <p>Have a question? Ask it in discussions.</p> <p>Want to contribute to this project? Check out the contributing guidelines.</p>"},{"location":"#references","title":"References","text":"<p>This repo was originally generated from the CCBR Nextflow Template. The template takes inspiration from nektool1 and the nf-core template. If you plan to contribute your pipeline to nf-core, don't use this template -- instead follow nf-core's instructions2.</p> <ol> <li> <p>nektool https://github.com/beardymcjohnface/nektool \u21a9</p> </li> <li> <p>instructions for nf-core pipelines https://nf-co.re/docs/contributing/tutorials/creating_with_nf_core \u21a9</p> </li> </ol>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#crispin-development-version","title":"CRISPIN development version","text":"<ul> <li>Fix spelling of shared SIF directory on biowulf -- it is <code>/data/CCBR_Pipeliner/SIFs</code> with a lowercase \"s\" at the end. (#54, @kelly-sovacool)</li> <li>Enable nextflow timeline &amp; trace reports by default. (#55, @kelly-sovacool)</li> </ul>"},{"location":"changelog/#crispin-101","title":"CRISPIN 1.0.1","text":"<ul> <li>CRISPIN is now archived in Zenodo as v1.0.0. You can cite it with https://doi.org/10.5281/zenodo.13844209. (@kelly-sovacool)</li> <li>Fix bug in spooker handler. (#49, @kelly-sovacool)</li> </ul>"},{"location":"changelog/#crispin-100","title":"CRISPIN 1.0.0","text":"<ul> <li>The pipeline name has been changed from CRUISE \ud83d\udef3\ufe0f to CRISPIN \ud83c\udf6a. (#43, @kelly-sovacool)</li> <li>Run spooker on workflow completion.</li> <li>Print the recommended citation in bibtex format with <code>crispin --citation</code>. (#32, @kelly-sovacool)</li> <li>Fix citation information (#38, @kelly-sovacool)</li> <li>Improve the documentation website with a dropdown menu to select which version to view. The latest release is shown by default. (#45, @kelly-sovacool)</li> </ul>"},{"location":"changelog/#cruise-011","title":"CRUISE 0.1.1","text":""},{"location":"changelog/#bug-fixes","title":"Bug fixes","text":"<ul> <li>All scripts in the bin directory are now made executable for all users on biowulf (#25).</li> <li>Data directories are copied recursively during python package installation (#26).</li> </ul>"},{"location":"changelog/#cruise-010","title":"CRUISE 0.1.0","text":"<p>This is the first release of CRUISE \ud83c\udf89</p>"},{"location":"changelog/#new-features","title":"New features","text":"<ul> <li>Trim adapters with cutadapt.</li> <li>Run mageck count. (#9)</li> <li><code>mageck count</code> only runs if a count table isn't given.</li> <li>Optional: run mageck test and mle. (#9)</li> <li><code>mageck mle</code> only runs if a design matrix is given.</li> <li>Optional: run drugZ. (#10)</li> <li>Optional: run BAGEL2. (#11)</li> <li>fc (fold change)</li> <li>bf (bayes factor)</li> <li>pr (precision recall)</li> <li>CLI (#16)</li> <li><code>cruise init</code> to initialize a project directory.</li> <li><code>cruise run</code><ul> <li><code>--mode slurm</code> to submit a slurm job to biowulf or frce.</li> <li><code>--main path/to/main.nf</code> to select a different local install of cruise, or specify the repo (<code>CCBR/CRUISE</code>) to get it from GitHub.</li> </ul> </li> </ul>"},{"location":"contributing/","title":"Contributing to CRISPIN","text":"<p>TODO -- describe gitflow, require PRs...</p>"},{"location":"contributing/#use-pre-commit-hooks","title":"Use pre-commit hooks","text":"<p>Pre-commit can automatically format your code, check for spelling errors, etc. every time you commit.</p> <p>Install pre-commit if you haven't already, then run <code>pre-commit install</code> to install the hooks specified in <code>.pre-commit-config.yaml</code>. Pre-commit will run the hooks every time you commit.</p>"},{"location":"contributing/#versions","title":"Versions","text":"<p>Increment the version number following semantic versioning1 in the <code>VERSION</code> file.</p>"},{"location":"contributing/#changelog","title":"Changelog","text":"<p>Keep the changelog up to date with all notable changes in <code>CHANGELOG.md</code>2.</p>"},{"location":"contributing/#vs-code-extensions","title":"VS code extensions","text":"<p>If you use VS code, installing nf-core extension pack is recommended.</p>"},{"location":"contributing/#installation","title":"Installation","text":"<p>For testing and debugging, We recommend installing the dev version of crispin to a user-specific location.</p> <pre><code>git clone https://github.com/CCBR/CRISPIN\nmkdir -p ~/bin/crispin\npip install ./CRISPIN -t ~/bin/crispin\nexport PATH=\"$HOME/bin/crispin/bin:$PATH\"\n</code></pre> <ol> <li> <p>semantic versioning guidelines https://semver.org/ \u21a9</p> </li> <li> <p>changelog guidelines: https://keepachangelog.com/en/1.1.0/ \u21a9</p> </li> </ol>"},{"location":"nextflow/","title":"nextflow pipeline","text":"<p>You can run the nextflow pipeline directly by specifying this GitHub repo. You will need nextflow and either singularity or docker installed. In this case you don't need to run <code>crispin init</code> first, as the config files will be accessed directly from the GitHub repo.</p> <pre><code>nextflow run CCBR/CRISPIN -profile test,singularity\n</code></pre> <p>You can specify a specific version, tag, or branch with <code>-r</code>:</p> <pre><code>nextflow run CCBR/CRISPIN -r v1.0.0 -profile test,singularity\n</code></pre> <p>Create and use a custom reference genome:</p> <pre><code>nextflow run CCBR/CRISPIN -profile test -entry MAKE_REFERENCE\nnextflow run CCBR/CRISPIN -profile test -c results/test/genome/custom_genome.config\n</code></pre>"}]}